# Generated by Django 4.0.3 on 2022-05-26 12:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='JoomlaUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('block', models.IntegerField()),
                ('sendEmail', models.IntegerField(blank=True, db_column='sendEmail', null=True)),
                ('registerdate', models.DateTimeField(db_column='registerDate')),
                ('lastvisitdate', models.DateTimeField(db_column='lastvisitDate')),
                ('activation', models.CharField(max_length=100)),
                ('params', models.TextField()),
                ('lastresettime', models.DateTimeField(db_column='lastResetTime')),
                ('resetcount', models.IntegerField(db_column='resetCount')),
                ('otpkey', models.CharField(db_column='otpKey', max_length=1000)),
                ('otep', models.CharField(max_length=1000)),
                ('requirereset', models.IntegerField(db_column='requireReset')),
            ],
            options={
                'db_table': 'J3_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Poule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.CharField(choices=[('D', 'Dames'), ('H', 'Heren'), ('X', 'Mix')], max_length=1)),
                ('nummer', models.IntegerField()),
                ('speeltijd', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Speellocatie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Speelronde',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nummer', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.CharField(choices=[('D', 'Dames'), ('H', 'Heren'), ('X', 'Mix')], max_length=1)),
                ('naam', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Speler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Wedstrijd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntenTeam1', models.PositiveSmallIntegerField()),
                ('puntenTeam2', models.PositiveSmallIntegerField()),
                ('poule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wedstrijden', to='BeachPortalApi.poule')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='BeachPortalApi.team')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='BeachPortalApi.team')),
            ],
            options={
                'verbose_name_plural': 'Wedstrijden',
            },
        ),
        migrations.AddField(
            model_name='team',
            name='spelers',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='poule',
            name='speellocatie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='speellocaties', to='BeachPortalApi.speellocatie'),
        ),
        migrations.AddField(
            model_name='poule',
            name='speelronde',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poules', to='BeachPortalApi.speelronde'),
        ),
        migrations.AddField(
            model_name='poule',
            name='teams',
            field=models.ManyToManyField(blank=True, to='BeachPortalApi.team'),
        ),
    ]
